#!/usr/bin/env bash
#
# == This script assumes it's installed in a writeable path ==
#
# Launch a Scala Markdown notebook server on localhost:4000 serving
# *.md in the current directory.
#
# More useful than a repl.  Just write GFM format Markdown files in the
# current directory and use ```scala mdoc``` as the fenced code block type.
#
# Scala results (in the web page) automatically refresh on save.
#
# You can add any library dependencies you need at the command line.
#   See https://scalameta.org/mdoc for details.
#
# Compatible with Linux and MacOS.

# Install coursier dependency if it's not already
HERE=`dirname $0`

command cs --help > /dev/null 2>&1 || \
    curl -fLo cs https://git.io/coursier-cli-"$(uname | tr LD ld)" && \
        chmod +x cs && \
        ./cs install cs && \
        rm -f cs

# Upgrade coursier if needed
cs update cs || exit 1

# Launch the notebook server
SCALA=2.13
MDOC=2.2.19

IN=.
OUT=/tmp/notebook-$RANDOM
LOGFILE=$OUT/log/notebook.log

echo "Output is being placed in [$OUT]"

mkdir -p $IN   # in case someone changes $IN to something else
mkdir -p $OUT/log
touch $LOGFILE

set -m # enable job control inside script

cs launch "org.scalameta:mdoc_$SCALA:$MDOC" $@ -- \
  --in $IN --out $OUT \
  --exclude .git \
  --exclude .metals \
  --exclude .idea \
  --exclude .bloop \
  --classpath $(cs fetch -p org.scala-lang.modules:scala-xml_2.13:2.0.0-RC1) \
  --watch \
    > $LOGFILE 2>&1 &

# Display the logs
tail -f -n +0 $LOGFILE &
PID=$!   # Keep track of tail's process ID so we can kill it later

# Open the user's web browser to the notebook web page once the server has started
( tail -f -n +0 $LOGFILE & ) | grep -q "Waiting for file changes"

WEBPAGE='http://localhost:4000'
command xdg-open $WEBPAGE || open $WEBPAGE

# Bring the notebook server back to the foreground
echo "*****************************************"
echo "*** Press <enter> to stop the server. ***"
echo "*****************************************"

fg cs # Blocks until user hits <enter>
kill $PID   # Kill the background tail
